{"version":3,"sources":["webpack:///./src/pages/insertion-sort.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/utils/shuffle.js","webpack:///./src/components/NumberItem.js","webpack:///./src/styles/variables.js","webpack:///./src/components/BubbleSort.js","webpack:///./src/components/InsertionSort.js"],"names":["__webpack_exports__","default","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components__WEBPACK_IMPORTED_MODULE_1__","b","items","Object","_utils__WEBPACK_IMPORTED_MODULE_3__","ramda_src_range__WEBPACK_IMPORTED_MODULE_4___default","219","e","t","n","m","module","exports","__webpack_require__","StaticQueryContext","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","o","225","site","siteMetadata","title","226","r","i","c","s","u","l","Layout","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","meta","name","content","style","margin","maxWidth","padding","paddingTop","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","node","d","230","shuffle_shuffle","arr","copy","clone_default","length","j","Math","floor","random","temp","NumberItem_NumberItem","item","isCurrent","isPrimaryCounter","isSecondaryCounter","react_default","className","index_es","css","_templateObject","fontMono","_templateObject2","_templateObject3","w","g","BubbleSort_BubbleSort","_Component","BubbleSort","_this","_len","arguments","args","Array","_key","call","apply","this","concat","initialState","swap","index","currentTick","state","swapItems","firstIndex","secondIndex","start","interval","window","setInterval","nextTick","stop","clearInterval","reset","setState","_this$state","assign","inheritsLoose_default","_proto","prototype","componentWillUnmount","BubbleSort_templateObject","onClick","disabled","BubbleSort_templateObject2","map","key","react","Component","array","prop_types_default","InsertionSort_InsertionSort","InsertionSort","outerIndex","innerIndex","action","reduceState","increaseOuterCounter","decreaseInnerCounter","next","prev","nextItems","InsertionSort_templateObject","InsertionSort_templateObject2"],"mappings":"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","file":"component---src-pages-insertion-sort-js-fbb399f3fa3423e80410.js","sourcesContent":["import React from 'react'\nimport { InsertionSort } from '../components'\nimport Layout from '../components/layout'\nimport { shuffle } from '../utils'\nimport range from 'ramda/src/range'\n\nconst Page = () => (\n  <Layout>\n    <InsertionSort items={shuffle(range(1, 11))} />\n  </Layout>\n)\n\nexport default Page\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV === `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport './layout.css'\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 1120,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: '1rem',\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import clone from 'ramda/src/clone';\n\nexport const shuffle = arr => {\n  const copy = clone(arr);\n\n  for (let i = copy.length - 1; i >= 0; i--) {\n    const j = Math.floor(Math.random() * i);\n\n    const temp = copy[j];\n    copy[j] = copy[i];\n    copy[i] = temp;\n  }\n  return copy;\n};\n","import React from 'react'\nimport { css } from 'emotion'\nimport { fontMono } from '../styles/variables'\n\n/**\n * NumberItem\n * Intended to be used within the sorting visualizations.\n * Pretty light component, all it does it add some styles to a list item\n */\nexport const NumberItem = ({\n  item,\n  isCurrent,\n  isPrimaryCounter,\n  isSecondaryCounter,\n}) => (\n  <li\n    className={css`\n      list-style-type: none;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 0.5rem;\n      font-family: ${fontMono};\n    `}\n  >\n    <span\n      className={css`\n        text-decoration: ${isCurrent || isPrimaryCounter\n          ? 'underline'\n          : 'none'};\n      `}\n    >\n      {item}\n    </span>\n    <span\n      className={css`\n        line-height: 1;\n        font-size: 0.75rem;\n      `}\n    >\n      {isSecondaryCounter && '^'}\n    </span>\n  </li>\n)\n","export const fontMono = `\"SFMono-Regular\", Consolas, \"Roboto Mono\", \"Droid Sans Mono\", \"Liberation Mono\", Menlo, Courier, monospace;`\n\nexport const fontSizeExtraSmall = '0.5rem';\nexport const fontSizeSmall = '0.75rem';\nexport const fontSizeMedium = '1rem';\nexport const fontSizeLarge = '1.25rem';\nexport const fontSizeExtraLarge = '1.5rem';","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport clone from 'ramda/src/clone'\nimport { css } from 'emotion'\nimport { NumberItem } from './NumberItem'\n\nexport class BubbleSort extends Component {\n  static propTypes = {\n    items: PropTypes.array,\n  }\n\n  initialState = {\n    items: this.props.items,\n    swap: true,\n    index: 0,\n    currentTick: 'init',\n  }\n\n  state = this.initialState\n\n  swapItems = (firstIndex, secondIndex) => {\n    const copy = clone(this.state.items)\n\n    const temp = copy[firstIndex]\n    copy[firstIndex] = copy[secondIndex]\n    copy[secondIndex] = temp\n\n    return copy\n  }\n\n  start = () => {\n    this.interval = window.setInterval(this.nextTick, 50)\n  }\n\n  stop = () => {\n    window.clearInterval(this.interval)\n  }\n\n  reset = () => {\n    this.stop()\n    this.setState(this.initialState)\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      window.clearInterval(this.interval)\n    }\n  }\n\n  nextTick = () => {\n    const { currentTick, items, index, swap } = this.state\n\n    switch (currentTick) {\n      case 'init': {\n        return this.setState(state => ({ currentTick: 'compare' }))\n      }\n      case 'compare': {\n        if (index + 1 === items.length) {\n          return this.setState(state => ({\n            ...state,\n            currentTick: swap === true ? 'compare' : 'end',\n            index: 0,\n            swap: false,\n          }))\n        }\n\n        const shouldSwap = items[index] > items[index + 1]\n\n        if (shouldSwap) {\n          return this.setState(state => ({\n            ...state,\n            currentTick: 'swap',\n            swap: true,\n          }))\n        }\n\n        return this.setState(state => ({ ...state, currentTick: 'noswap' }))\n      }\n      case 'swap': {\n        return this.setState(state => ({\n          ...state,\n          currentTick: 'next',\n          items: this.swapItems(index, index + 1),\n        }))\n      }\n      case 'noswap':\n        return this.setState(state => ({\n          ...state,\n          currentTick: 'next',\n        }))\n      case 'next':\n        return this.setState(state => ({\n          ...state,\n          currentTick: 'compare',\n          index: state.index + 1,\n        }))\n      case 'end':\n      default:\n        break\n    }\n  }\n\n  render() {\n    const { state } = this\n    return (\n      <div>\n        <h1\n          className={css`\n            font-size: 1.5rem;\n          `}\n        >\n          bubble sort\n        </h1>\n        \n        <button onClick={this.start} disabled={state.currentTick === 'end'}>\n          {state.currentTick === 'end' ? 'done 🎉' : 'start'}\n        </button>\n\n        <button\n          onClick={this.stop}\n          disabled={!this.interval || state.currentTick === 'end'}\n        >\n          pause\n        </button>\n\n        <button onClick={this.reset} disabled={state.currentTick === 'init'}>\n          reset\n        </button>\n\n        <ul\n          className={css`\n            margin: 1rem 0;\n            padding-left: 0;\n            display: flex;\n          `}\n        >\n          {state.items.map((item, i) => (\n            <NumberItem item={item} isCurrent={state.index === i} key={item} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { css } from 'emotion'\nimport flow from 'lodash/flow'\nimport { fontSizeExtraLarge } from '../styles/variables'\nimport { NumberItem } from './NumberItem'\nimport clone from 'ramda/src/clone'\n\nexport class InsertionSort extends Component {\n  static propTypes = {\n    items: PropTypes.array,\n  }\n\n  initialState = {\n    items: this.props.items,\n    outerIndex: 0,\n    innerIndex: 0,\n    action: 'init',\n  }\n\n  state = this.initialState\n\n  start = () => {\n    this.interval = window.setInterval(this.reduceState, 200)\n  }\n\n  stop = () => {\n    window.clearInterval(this.interval)\n  }\n\n  reset = () => {\n    this.stop()\n    this.setState(this.initialState)\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      window.clearInterval(this.interval)\n    }\n  }\n\n  swap = (items, firstIndex, secondIndex) => {\n    const copy = clone(items)\n    const temp = copy[firstIndex]\n    copy[firstIndex] = copy[secondIndex]\n    copy[secondIndex] = temp\n\n    return copy\n  }\n\n  reduceState = () => {\n    const { action } = this.state\n    switch (action) {\n      case 'init':\n        /**\n         * Start at 0, which is an already sorted array.\n         * Technically this should still follow all the other steps, but for things feeling nice it\n         * may be better to just increase the outer counter to 1 & move on with life.\n         */\n        return this.setState(state => ({ action: 'increaseOuterCounter' }))\n      case 'increaseOuterCounter':\n        return this.setState(this.increaseOuterCounter)\n      case 'decreaseInnerCounter':\n        return this.setState(this.decreaseInnerCounter)\n      case 'end':\n      default:\n        return\n    }\n  }\n\n  /**\n   * Increase the outer counter and start an inner loop.\n   */\n  increaseOuterCounter = state => {\n    const { outerIndex, items } = state\n\n    // Placed as a safeguard. Ideally should never come up on this situation\n    if (outerIndex === items.length - 1) {\n      return {\n        ...state,\n        action: 'end',\n      }\n    }\n\n    const next = outerIndex + 1\n\n    return {\n      ...state,\n      outerIndex: next,\n      innerIndex: next,\n      action: 'decreaseInnerCounter',\n    }\n  }\n\n  /**\n   * For each step, compare with the item below & swap as necessary\n   * will need to keep returning \"itself\" until the item is actually placed\n   * At this point the inner counter is finished, so we will need to reset it & move the outer counter up\n   * \n   * When the last inner loop ends, we're done!!! 🎉\n   */\n  decreaseInnerCounter = state => {\n    const { items, innerIndex, outerIndex } = state\n\n    if (innerIndex === 0) {\n      return {\n        ...state,\n        action: outerIndex === items.length - 1 ? 'end' : 'increaseOuterCounter',\n      }\n    }\n\n    const prev = innerIndex - 1\n    const nextItems =\n      items[innerIndex] < items[prev]\n        ? this.swap(items, innerIndex, prev)\n        : items\n\n    return {\n      ...state,\n      innerIndex: prev,\n      items: nextItems,\n      action: 'decreaseInnerCounter',\n    }\n  }\n\n  render() {\n    const { state } = this\n    return (\n      <div>\n        <h1\n          className={css`\n            font-size: ${fontSizeExtraLarge};\n          `}\n        >\n          insertion sort\n        </h1>\n\n        <button onClick={this.start} disabled={state.currentTick === 'end'}>\n          {state.action === 'end' ? 'done 🎉' : 'start'}\n        </button>\n\n        <button onClick={this.reset} disabled={state.currentTick === 'init'}>\n          reset\n        </button>\n\n        <ul\n          className={css`\n            margin: 1rem 0;\n            padding-left: 0;\n            display: flex;\n          `}\n        >\n          {state.items.map((item, i) => (\n            <NumberItem\n              item={item}\n              isPrimaryCounter={state.outerIndex === i}\n              isSecondaryCounter={state.innerIndex === i}\n              key={item}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}